name: CI Debug

on:
  push:
  # runs on PRs against RMG-Py (and anywhere else, but we add this for RMG-Py)
  pull_request:

# this prevents one PR from simultaneously running multiple runners, which will clog up the queue
# and prevent other PRs from running the CI
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true


jobs:
  build-and-test-linux:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: mkdir stable_regression_results
        run: mkdir stable_regression_results

      # Retrieve Stable Results for reference
      - name : Find ID of Reference Results
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          run_id=$(gh run list -R ReactionMechanismGenerator/RMG-Py --workflow="Continuous Integration" --branch main --limit 1 --json databaseId --jq '.[0].databaseId')
          echo "CI_RUN_ID=$run_id" >> $GITHUB_ENV

      - name: Retrieve Stable Regression Results
        uses: actions/download-artifact@v4
        with:
        # this will search for the last successful execution of CI on main and download
        # the stable regression results
          run-id: ${{ env.CI_RUN_ID }}
          repository: ReactionMechanismGenerator/RMG-Py
          github-token: ${{ secrets.GITHUB_TOKEN }}
          name: stable_regression_results
          path: stable_regression_results
